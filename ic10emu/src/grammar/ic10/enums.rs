// GENERATED CODE DO NOT MODIFY
#[derive(PartialEq, Debug)]
pub enum Enum {
     LogicSlotTypePressure( #[rust_sitter::leaf(text = "LogicSlotType.Pressure", transform = |s| s.to_string() )] String ),
     LogicTypeOperationalTemperatureEfficiency( #[rust_sitter::leaf(text = "LogicType.OperationalTemperatureEfficiency", transform = |s| s.to_string() )] String ),
     SlotClassOrgan( #[rust_sitter::leaf(text = "SlotClass.Organ", transform = |s| s.to_string() )] String ),
     SlotClassDrillHead( #[rust_sitter::leaf(text = "SlotClass.DrillHead", transform = |s| s.to_string() )] String ),
     LogicTypeRatioCarbonDioxide( #[rust_sitter::leaf(text = "LogicType.RatioCarbonDioxide", transform = |s| s.to_string() )] String ),
     LogicTypeInclination( #[rust_sitter::leaf(text = "LogicType.Inclination", transform = |s| s.to_string() )] String ),
     LogicTypeRatioOxygenOutput2( #[rust_sitter::leaf(text = "LogicType.RatioOxygenOutput2", transform = |s| s.to_string() )] String ),
     ColorGreen( #[rust_sitter::leaf(text = "Color.Green", transform = |s| s.to_string() )] String ),
     SlotClassMotherboard( #[rust_sitter::leaf(text = "SlotClass.Motherboard", transform = |s| s.to_string() )] String ),
     LogicTypeSemiMajorAxis( #[rust_sitter::leaf(text = "LogicType.SemiMajorAxis", transform = |s| s.to_string() )] String ),
     LogicTypeCharge( #[rust_sitter::leaf(text = "LogicType.Charge", transform = |s| s.to_string() )] String ),
     LogicTypeRatioSteamInput( #[rust_sitter::leaf(text = "LogicType.RatioSteamInput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioSteamOutput2( #[rust_sitter::leaf(text = "LogicType.RatioSteamOutput2", transform = |s| s.to_string() )] String ),
     LogicTypePassedMoles( #[rust_sitter::leaf(text = "LogicType.PassedMoles", transform = |s| s.to_string() )] String ),
     LogicTypeEccentricity( #[rust_sitter::leaf(text = "LogicType.Eccentricity", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidOxygen( #[rust_sitter::leaf(text = "LogicType.RatioLiquidOxygen", transform = |s| s.to_string() )] String ),
     LogicSlotTypeLineNumber( #[rust_sitter::leaf(text = "LogicSlotType.LineNumber", transform = |s| s.to_string() )] String ),
     RobotModeFollow( #[rust_sitter::leaf(text = "RobotMode.Follow", transform = |s| s.to_string() )] String ),
     ColorPink( #[rust_sitter::leaf(text = "Color.Pink", transform = |s| s.to_string() )] String ),
     Equals( #[rust_sitter::leaf(text = "Equals", transform = |s| s.to_string() )] String ),
     SortingClassAtmospherics( #[rust_sitter::leaf(text = "SortingClass.Atmospherics", transform = |s| s.to_string() )] String ),
     PowerModeCharging( #[rust_sitter::leaf(text = "PowerMode.Charging", transform = |s| s.to_string() )] String ),
     SlotClassGasFilter( #[rust_sitter::leaf(text = "SlotClass.GasFilter", transform = |s| s.to_string() )] String ),
     ColorBrown( #[rust_sitter::leaf(text = "Color.Brown", transform = |s| s.to_string() )] String ),
     LogicTypeHorizontalRatio( #[rust_sitter::leaf(text = "LogicType.HorizontalRatio", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrogenInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrogenInput2", transform = |s| s.to_string() )] String ),
     LogicTypePlant( #[rust_sitter::leaf(text = "LogicType.Plant", transform = |s| s.to_string() )] String ),
     LogicTypeCombustionInput2( #[rust_sitter::leaf(text = "LogicType.CombustionInput2", transform = |s| s.to_string() )] String ),
     LogicSlotTypeFilterType( #[rust_sitter::leaf(text = "LogicSlotType.FilterType", transform = |s| s.to_string() )] String ),
     LogicTypePowerPotential( #[rust_sitter::leaf(text = "LogicType.PowerPotential", transform = |s| s.to_string() )] String ),
     LogicTypeOn( #[rust_sitter::leaf(text = "LogicType.On", transform = |s| s.to_string() )] String ),
     GasTypePollutant( #[rust_sitter::leaf(text = "GasType.Pollutant", transform = |s| s.to_string() )] String ),
     GasTypeNitrogen( #[rust_sitter::leaf(text = "GasType.Nitrogen", transform = |s| s.to_string() )] String ),
     LogicTypeVerticalRatio( #[rust_sitter::leaf(text = "LogicType.VerticalRatio", transform = |s| s.to_string() )] String ),
     AirConCold( #[rust_sitter::leaf(text = "AirCon.Cold", transform = |s| s.to_string() )] String ),
     LogicTypeEnvironmentEfficiency( #[rust_sitter::leaf(text = "LogicType.EnvironmentEfficiency", transform = |s| s.to_string() )] String ),
     LogicTypeRatioPollutantOutput( #[rust_sitter::leaf(text = "LogicType.RatioPollutantOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioVolatilesOutput2( #[rust_sitter::leaf(text = "LogicType.RatioVolatilesOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeLineNumber( #[rust_sitter::leaf(text = "LogicType.LineNumber", transform = |s| s.to_string() )] String ),
     LogicTypeCelestialParentHash( #[rust_sitter::leaf(text = "LogicType.CelestialParentHash", transform = |s| s.to_string() )] String ),
     LogicTypeStress( #[rust_sitter::leaf(text = "LogicType.Stress", transform = |s| s.to_string() )] String ),
     SlotClassProgrammableChip( #[rust_sitter::leaf(text = "SlotClass.ProgrammableChip", transform = |s| s.to_string() )] String ),
     LogicTypeRatioVolatilesInput( #[rust_sitter::leaf(text = "LogicType.RatioVolatilesInput", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureOutput2( #[rust_sitter::leaf(text = "LogicType.TemperatureOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeMinimumWattsToContact( #[rust_sitter::leaf(text = "LogicType.MinimumWattsToContact", transform = |s| s.to_string() )] String ),
     GasTypeUndefined( #[rust_sitter::leaf(text = "GasType.Undefined", transform = |s| s.to_string() )] String ),
     LogicSlotTypeOccupantHash( #[rust_sitter::leaf(text = "LogicSlotType.OccupantHash", transform = |s| s.to_string() )] String ),
     GasTypeVolatiles( #[rust_sitter::leaf(text = "GasType.Volatiles", transform = |s| s.to_string() )] String ),
     AirConHot( #[rust_sitter::leaf(text = "AirCon.Hot", transform = |s| s.to_string() )] String ),
     AirControlNone( #[rust_sitter::leaf(text = "AirControl.None", transform = |s| s.to_string() )] String ),
     AirControlDraught( #[rust_sitter::leaf(text = "AirControl.Draught", transform = |s| s.to_string() )] String ),
     LogicTypeRatioWaterInput2( #[rust_sitter::leaf(text = "LogicType.RatioWaterInput2", transform = |s| s.to_string() )] String ),
     EntityStateAlive( #[rust_sitter::leaf(text = "EntityState.Alive", transform = |s| s.to_string() )] String ),
     LogicTypeColor( #[rust_sitter::leaf(text = "LogicType.Color", transform = |s| s.to_string() )] String ),
     SlotClassSensorProcessingUnit( #[rust_sitter::leaf(text = "SlotClass.SensorProcessingUnit", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityRelativeY( #[rust_sitter::leaf(text = "LogicType.VelocityRelativeY", transform = |s| s.to_string() )] String ),
     SlotClassCircuitboard( #[rust_sitter::leaf(text = "SlotClass.Circuitboard", transform = |s| s.to_string() )] String ),
     LogicTypeChannel4( #[rust_sitter::leaf(text = "LogicType.Channel4", transform = |s| s.to_string() )] String ),
     LogicTypeForceWrite( #[rust_sitter::leaf(text = "LogicType.ForceWrite", transform = |s| s.to_string() )] String ),
     SortingClassTools( #[rust_sitter::leaf(text = "SortingClass.Tools", transform = |s| s.to_string() )] String ),
     LogicTypeWeight( #[rust_sitter::leaf(text = "LogicType.Weight", transform = |s| s.to_string() )] String ),
     LogicTypeReEntryAltitude( #[rust_sitter::leaf(text = "LogicType.ReEntryAltitude", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureOutput( #[rust_sitter::leaf(text = "LogicType.TemperatureOutput", transform = |s| s.to_string() )] String ),
     SortingClassIces( #[rust_sitter::leaf(text = "SortingClass.Ices", transform = |s| s.to_string() )] String ),
     SlotClassEgg( #[rust_sitter::leaf(text = "SlotClass.Egg", transform = |s| s.to_string() )] String ),
     LogicTypeFlush( #[rust_sitter::leaf(text = "LogicType.Flush", transform = |s| s.to_string() )] String ),
     LogicTypeBurnTimeRemaining( #[rust_sitter::leaf(text = "LogicType.BurnTimeRemaining", transform = |s| s.to_string() )] String ),
     GasTypeLiquidVolatiles( #[rust_sitter::leaf(text = "GasType.LiquidVolatiles", transform = |s| s.to_string() )] String ),
     SlotClassCreditCard( #[rust_sitter::leaf(text = "SlotClass.CreditCard", transform = |s| s.to_string() )] String ),
     ColorWhite( #[rust_sitter::leaf(text = "Color.White", transform = |s| s.to_string() )] String ),
     LogicTypeTimeToDestination( #[rust_sitter::leaf(text = "LogicType.TimeToDestination", transform = |s| s.to_string() )] String ),
     LogicTypePressureEfficiency( #[rust_sitter::leaf(text = "LogicType.PressureEfficiency", transform = |s| s.to_string() )] String ),
     SortingClassStorage( #[rust_sitter::leaf(text = "SortingClass.Storage", transform = |s| s.to_string() )] String ),
     LogicTypeForwardZ( #[rust_sitter::leaf(text = "LogicType.ForwardZ", transform = |s| s.to_string() )] String ),
     LogicTypeThrustToWeight( #[rust_sitter::leaf(text = "LogicType.ThrustToWeight", transform = |s| s.to_string() )] String ),
     LogicTypeDryMass( #[rust_sitter::leaf(text = "LogicType.DryMass", transform = |s| s.to_string() )] String ),
     LogicTypeReagents( #[rust_sitter::leaf(text = "LogicType.Reagents", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrousOxideInput2( #[rust_sitter::leaf(text = "LogicType.RatioNitrousOxideInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioPollutantOutput2( #[rust_sitter::leaf(text = "LogicType.RatioPollutantOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioSteam( #[rust_sitter::leaf(text = "LogicType.RatioSteam", transform = |s| s.to_string() )] String ),
     LogicTypeSizeX( #[rust_sitter::leaf(text = "LogicType.SizeX", transform = |s| s.to_string() )] String ),
     GasTypeOxygen( #[rust_sitter::leaf(text = "GasType.Oxygen", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidOxygenInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidOxygenInput2", transform = |s| s.to_string() )] String ),
     ColorGray( #[rust_sitter::leaf(text = "Color.Gray", transform = |s| s.to_string() )] String ),
     LogicTypePressureInput2( #[rust_sitter::leaf(text = "LogicType.PressureInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioVolatilesOutput( #[rust_sitter::leaf(text = "LogicType.RatioVolatilesOutput", transform = |s| s.to_string() )] String ),
     LogicTypeTotalMoles( #[rust_sitter::leaf(text = "LogicType.TotalMoles", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidOxygenOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidOxygenOutput", transform = |s| s.to_string() )] String ),
     EntityStateDead( #[rust_sitter::leaf(text = "EntityState.Dead", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityRelativeX( #[rust_sitter::leaf(text = "LogicType.VelocityRelativeX", transform = |s| s.to_string() )] String ),
     LogicTypePrefabHash( #[rust_sitter::leaf(text = "LogicType.PrefabHash", transform = |s| s.to_string() )] String ),
     LogicTypeRatioOxygenOutput( #[rust_sitter::leaf(text = "LogicType.RatioOxygenOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidVolatilesOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidVolatilesOutput", transform = |s| s.to_string() )] String ),
     SlotClassBottle( #[rust_sitter::leaf(text = "SlotClass.Bottle", transform = |s| s.to_string() )] String ),
     LogicTypeRatioCarbonDioxideOutput( #[rust_sitter::leaf(text = "LogicType.RatioCarbonDioxideOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioWaterOutput2( #[rust_sitter::leaf(text = "LogicType.RatioWaterOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrogenInput( #[rust_sitter::leaf(text = "LogicType.RatioNitrogenInput", transform = |s| s.to_string() )] String ),
     LogicTypeCombustionLimiter( #[rust_sitter::leaf(text = "LogicType.CombustionLimiter", transform = |s| s.to_string() )] String ),
     SlotClassBelt( #[rust_sitter::leaf(text = "SlotClass.Belt", transform = |s| s.to_string() )] String ),
     LogicTypeVolume( #[rust_sitter::leaf(text = "LogicType.Volume", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrousOxide( #[rust_sitter::leaf(text = "LogicType.RatioNitrousOxide", transform = |s| s.to_string() )] String ),
     LogicTypeChannel3( #[rust_sitter::leaf(text = "LogicType.Channel3", transform = |s| s.to_string() )] String ),
     SlotClassBlocked( #[rust_sitter::leaf(text = "SlotClass.Blocked", transform = |s| s.to_string() )] String ),
     DaylightSensorModeVertical( #[rust_sitter::leaf(text = "DaylightSensorMode.Vertical", transform = |s| s.to_string() )] String ),
     LogicTypeSizeZ( #[rust_sitter::leaf(text = "LogicType.SizeZ", transform = |s| s.to_string() )] String ),
     LogicTypeRatioSteamOutput( #[rust_sitter::leaf(text = "LogicType.RatioSteamOutput", transform = |s| s.to_string() )] String ),
     LogicSlotTypeChargeRatio( #[rust_sitter::leaf(text = "LogicSlotType.ChargeRatio", transform = |s| s.to_string() )] String ),
     LogicTypeNextWeatherEventTime( #[rust_sitter::leaf(text = "LogicType.NextWeatherEventTime", transform = |s| s.to_string() )] String ),
     LogicSlotTypeCharge( #[rust_sitter::leaf(text = "LogicSlotType.Charge", transform = |s| s.to_string() )] String ),
     LogicTypePressureSetting( #[rust_sitter::leaf(text = "LogicType.PressureSetting", transform = |s| s.to_string() )] String ),
     SlotClassLiquidCanister( #[rust_sitter::leaf(text = "SlotClass.LiquidCanister", transform = |s| s.to_string() )] String ),
     GasTypeLiquidPollutant( #[rust_sitter::leaf(text = "GasType.LiquidPollutant", transform = |s| s.to_string() )] String ),
     LogicSlotTypeVolume( #[rust_sitter::leaf(text = "LogicSlotType.Volume", transform = |s| s.to_string() )] String ),
     LogicTypeCollectableGoods( #[rust_sitter::leaf(text = "LogicType.CollectableGoods", transform = |s| s.to_string() )] String ),
     SlotClassSuit( #[rust_sitter::leaf(text = "SlotClass.Suit", transform = |s| s.to_string() )] String ),
     GasTypeCarbonDioxide( #[rust_sitter::leaf(text = "GasType.CarbonDioxide", transform = |s| s.to_string() )] String ),
     ColorBlack( #[rust_sitter::leaf(text = "Color.Black", transform = |s| s.to_string() )] String ),
     Greater( #[rust_sitter::leaf(text = "Greater", transform = |s| s.to_string() )] String ),
     LogicTypeRatioCarbonDioxideInput( #[rust_sitter::leaf(text = "LogicType.RatioCarbonDioxideInput", transform = |s| s.to_string() )] String ),
     LogicTypeContactTypeId( #[rust_sitter::leaf(text = "LogicType.ContactTypeId", transform = |s| s.to_string() )] String ),
     RobotModeNone( #[rust_sitter::leaf(text = "RobotMode.None", transform = |s| s.to_string() )] String ),
     LogicTypeRatioCarbonDioxideOutput2( #[rust_sitter::leaf(text = "LogicType.RatioCarbonDioxideOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeFlightControlRule( #[rust_sitter::leaf(text = "LogicType.FlightControlRule", transform = |s| s.to_string() )] String ),
     LogicTypeForwardX( #[rust_sitter::leaf(text = "LogicType.ForwardX", transform = |s| s.to_string() )] String ),
     RobotModeRoam( #[rust_sitter::leaf(text = "RobotMode.Roam", transform = |s| s.to_string() )] String ),
     SortingClassFood( #[rust_sitter::leaf(text = "SortingClass.Food", transform = |s| s.to_string() )] String ),
     LogicTypeVolumeOfLiquid( #[rust_sitter::leaf(text = "LogicType.VolumeOfLiquid", transform = |s| s.to_string() )] String ),
     LogicTypeHarvest( #[rust_sitter::leaf(text = "LogicType.Harvest", transform = |s| s.to_string() )] String ),
     LogicTypeCombustionOutput2( #[rust_sitter::leaf(text = "LogicType.CombustionOutput2", transform = |s| s.to_string() )] String ),
     ColorPurple( #[rust_sitter::leaf(text = "Color.Purple", transform = |s| s.to_string() )] String ),
     LogicTypeAcceleration( #[rust_sitter::leaf(text = "LogicType.Acceleration", transform = |s| s.to_string() )] String ),
     LogicTypeElevatorSpeed( #[rust_sitter::leaf(text = "LogicType.ElevatorSpeed", transform = |s| s.to_string() )] String ),
     LogicTypeRatioPollutant( #[rust_sitter::leaf(text = "LogicType.RatioPollutant", transform = |s| s.to_string() )] String ),
     LogicTypeHorizontal( #[rust_sitter::leaf(text = "LogicType.Horizontal", transform = |s| s.to_string() )] String ),
     VentInward( #[rust_sitter::leaf(text = "Vent.Inward", transform = |s| s.to_string() )] String ),
     LogicTypePressureInput( #[rust_sitter::leaf(text = "LogicType.PressureInput", transform = |s| s.to_string() )] String ),
     PowerModeCharged( #[rust_sitter::leaf(text = "PowerMode.Charged", transform = |s| s.to_string() )] String ),
     SortingClassResources( #[rust_sitter::leaf(text = "SortingClass.Resources", transform = |s| s.to_string() )] String ),
     LogicTypeCompletionRatio( #[rust_sitter::leaf(text = "LogicType.CompletionRatio", transform = |s| s.to_string() )] String ),
     SortingClassOres( #[rust_sitter::leaf(text = "SortingClass.Ores", transform = |s| s.to_string() )] String ),
     GasTypeLiquidNitrousOxide( #[rust_sitter::leaf(text = "GasType.LiquidNitrousOxide", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrousOxideInput( #[rust_sitter::leaf(text = "LogicType.RatioNitrousOxideInput", transform = |s| s.to_string() )] String ),
     LogicTypeChannel2( #[rust_sitter::leaf(text = "LogicType.Channel2", transform = |s| s.to_string() )] String ),
     LogicTypeMaximum( #[rust_sitter::leaf(text = "LogicType.Maximum", transform = |s| s.to_string() )] String ),
     LogicTypeCombustionOutput( #[rust_sitter::leaf(text = "LogicType.CombustionOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioPollutantInput( #[rust_sitter::leaf(text = "LogicType.RatioPollutantInput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrogenOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrogenOutput", transform = |s| s.to_string() )] String ),
     LogicTypeMineablesInVicinity( #[rust_sitter::leaf(text = "LogicType.MineablesInVicinity", transform = |s| s.to_string() )] String ),
     LogicTypeRatioWaterOutput( #[rust_sitter::leaf(text = "LogicType.RatioWaterOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidCarbonDioxideOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidCarbonDioxideOutput", transform = |s| s.to_string() )] String ),
     LogicTypeOpen( #[rust_sitter::leaf(text = "LogicType.Open", transform = |s| s.to_string() )] String ),
     LogicTypeRatioVolatiles( #[rust_sitter::leaf(text = "LogicType.RatioVolatiles", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityY( #[rust_sitter::leaf(text = "LogicType.VelocityY", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidCarbonDioxideInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidCarbonDioxideInput2", transform = |s| s.to_string() )] String ),
     LogicTypeIndex( #[rust_sitter::leaf(text = "LogicType.Index", transform = |s| s.to_string() )] String ),
     AirControlPressure( #[rust_sitter::leaf(text = "AirControl.Pressure", transform = |s| s.to_string() )] String ),
     RobotModeMoveToTarget( #[rust_sitter::leaf(text = "RobotMode.MoveToTarget", transform = |s| s.to_string() )] String ),
     SlotClassOre( #[rust_sitter::leaf(text = "SlotClass.Ore", transform = |s| s.to_string() )] String ),
     SlotClassHelmet( #[rust_sitter::leaf(text = "SlotClass.Helmet", transform = |s| s.to_string() )] String ),
     LogicTypePowerActual( #[rust_sitter::leaf(text = "LogicType.PowerActual", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidOxygenInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidOxygenInput", transform = |s| s.to_string() )] String ),
     LogicTypeAutoLand( #[rust_sitter::leaf(text = "LogicType.AutoLand", transform = |s| s.to_string() )] String ),
     LogicTypeSignalStrength( #[rust_sitter::leaf(text = "LogicType.SignalStrength", transform = |s| s.to_string() )] String ),
     GasTypeNitrousOxide( #[rust_sitter::leaf(text = "GasType.NitrousOxide", transform = |s| s.to_string() )] String ),
     LogicTypeMass( #[rust_sitter::leaf(text = "LogicType.Mass", transform = |s| s.to_string() )] String ),
     LogicTypeAlignmentError( #[rust_sitter::leaf(text = "LogicType.AlignmentError", transform = |s| s.to_string() )] String ),
     LogicTypePressureOutput( #[rust_sitter::leaf(text = "LogicType.PressureOutput", transform = |s| s.to_string() )] String ),
     LogicTypeTargetY( #[rust_sitter::leaf(text = "LogicType.TargetY", transform = |s| s.to_string() )] String ),
     PowerModeDischarged( #[rust_sitter::leaf(text = "PowerMode.Discharged", transform = |s| s.to_string() )] String ),
     LogicSlotTypeNone( #[rust_sitter::leaf(text = "LogicSlotType.None", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityMagnitude( #[rust_sitter::leaf(text = "LogicType.VelocityMagnitude", transform = |s| s.to_string() )] String ),
     LogicTypeTotalMolesOutput2( #[rust_sitter::leaf(text = "LogicType.TotalMolesOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureSetting( #[rust_sitter::leaf(text = "LogicType.TemperatureSetting", transform = |s| s.to_string() )] String ),
     LogicTypePressure( #[rust_sitter::leaf(text = "LogicType.Pressure", transform = |s| s.to_string() )] String ),
     LogicTypeWorkingGasEfficiency( #[rust_sitter::leaf(text = "LogicType.WorkingGasEfficiency", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrogenOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrogenOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrogen( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrogen", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureExternal( #[rust_sitter::leaf(text = "LogicType.TemperatureExternal", transform = |s| s.to_string() )] String ),
     LogicTypeDrillCondition( #[rust_sitter::leaf(text = "LogicType.DrillCondition", transform = |s| s.to_string() )] String ),
     LogicSlotTypeReferenceId( #[rust_sitter::leaf(text = "LogicSlotType.ReferenceId", transform = |s| s.to_string() )] String ),
     LogicSlotTypeEfficiency( #[rust_sitter::leaf(text = "LogicSlotType.Efficiency", transform = |s| s.to_string() )] String ),
     LogicTypePressureInternal( #[rust_sitter::leaf(text = "LogicType.PressureInternal", transform = |s| s.to_string() )] String ),
     LogicTypeTrueAnomaly( #[rust_sitter::leaf(text = "LogicType.TrueAnomaly", transform = |s| s.to_string() )] String ),
     LogicSlotTypePrefabHash( #[rust_sitter::leaf(text = "LogicSlotType.PrefabHash", transform = |s| s.to_string() )] String ),
     LogicTypeRatioOxygenInput( #[rust_sitter::leaf(text = "LogicType.RatioOxygenInput", transform = |s| s.to_string() )] String ),
     LogicTypePressureExternal( #[rust_sitter::leaf(text = "LogicType.PressureExternal", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrogenOutput2( #[rust_sitter::leaf(text = "LogicType.RatioNitrogenOutput2", transform = |s| s.to_string() )] String ),
     LogicSlotTypeMaxQuantity( #[rust_sitter::leaf(text = "LogicSlotType.MaxQuantity", transform = |s| s.to_string() )] String ),
     LogicTypeMineablesInQueue( #[rust_sitter::leaf(text = "LogicType.MineablesInQueue", transform = |s| s.to_string() )] String ),
     ColorKhaki( #[rust_sitter::leaf(text = "Color.Khaki", transform = |s| s.to_string() )] String ),
     LogicTypePressureOutput2( #[rust_sitter::leaf(text = "LogicType.PressureOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeExhaustVelocity( #[rust_sitter::leaf(text = "LogicType.ExhaustVelocity", transform = |s| s.to_string() )] String ),
     SortingClassDefault( #[rust_sitter::leaf(text = "SortingClass.Default", transform = |s| s.to_string() )] String ),
     LogicTypeCombustion( #[rust_sitter::leaf(text = "LogicType.Combustion", transform = |s| s.to_string() )] String ),
     LogicTypeImportCount( #[rust_sitter::leaf(text = "LogicType.ImportCount", transform = |s| s.to_string() )] String ),
     LogicTypeOrientation( #[rust_sitter::leaf(text = "LogicType.Orientation", transform = |s| s.to_string() )] String ),
     LogicTypeSizeY( #[rust_sitter::leaf(text = "LogicType.SizeY", transform = |s| s.to_string() )] String ),
     LogicTypeChannel0( #[rust_sitter::leaf(text = "LogicType.Channel0", transform = |s| s.to_string() )] String ),
     SlotClassScanningHead( #[rust_sitter::leaf(text = "SlotClass.ScanningHead", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrousOxideOutput2( #[rust_sitter::leaf(text = "LogicType.RatioNitrousOxideOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeChannel1( #[rust_sitter::leaf(text = "LogicType.Channel1", transform = |s| s.to_string() )] String ),
     LogicTypeSetting( #[rust_sitter::leaf(text = "LogicType.Setting", transform = |s| s.to_string() )] String ),
     LogicSlotTypeTemperature( #[rust_sitter::leaf(text = "LogicSlotType.Temperature", transform = |s| s.to_string() )] String ),
     LogicTypeExportCount( #[rust_sitter::leaf(text = "LogicType.ExportCount", transform = |s| s.to_string() )] String ),
     LogicTypeReferenceId( #[rust_sitter::leaf(text = "LogicType.ReferenceId", transform = |s| s.to_string() )] String ),
     SlotClassDataDisk( #[rust_sitter::leaf(text = "SlotClass.DataDisk", transform = |s| s.to_string() )] String ),
     TransmitterModeActive( #[rust_sitter::leaf(text = "TransmitterMode.Active", transform = |s| s.to_string() )] String ),
     PowerModeIdle( #[rust_sitter::leaf(text = "PowerMode.Idle", transform = |s| s.to_string() )] String ),
     LogicTypeTime( #[rust_sitter::leaf(text = "LogicType.Time", transform = |s| s.to_string() )] String ),
     LogicTypeEntityState( #[rust_sitter::leaf(text = "LogicType.EntityState", transform = |s| s.to_string() )] String ),
     SlotClassAppliance( #[rust_sitter::leaf(text = "SlotClass.Appliance", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidVolatilesInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidVolatilesInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioOxygen( #[rust_sitter::leaf(text = "LogicType.RatioOxygen", transform = |s| s.to_string() )] String ),
     LogicTypeMode( #[rust_sitter::leaf(text = "LogicType.Mode", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureInput( #[rust_sitter::leaf(text = "LogicType.TemperatureInput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrousOxideInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrousOxideInput2", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureInput2( #[rust_sitter::leaf(text = "LogicType.TemperatureInput2", transform = |s| s.to_string() )] String ),
     LogicTypeTotalMolesInput( #[rust_sitter::leaf(text = "LogicType.TotalMolesInput", transform = |s| s.to_string() )] String ),
     LogicTypeIdle( #[rust_sitter::leaf(text = "LogicType.Idle", transform = |s| s.to_string() )] String ),
     LogicTypePower( #[rust_sitter::leaf(text = "LogicType.Power", transform = |s| s.to_string() )] String ),
     LogicTypeRatioVolatilesInput2( #[rust_sitter::leaf(text = "LogicType.RatioVolatilesInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrousOxideOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrousOxideOutput2", transform = |s| s.to_string() )] String ),
     LogicSlotTypeClass( #[rust_sitter::leaf(text = "LogicSlotType.Class", transform = |s| s.to_string() )] String ),
     SlotClassLiquidBottle( #[rust_sitter::leaf(text = "SlotClass.LiquidBottle", transform = |s| s.to_string() )] String ),
     SlotClassPlant( #[rust_sitter::leaf(text = "SlotClass.Plant", transform = |s| s.to_string() )] String ),
     SlotClassGlasses( #[rust_sitter::leaf(text = "SlotClass.Glasses", transform = |s| s.to_string() )] String ),
     VentOutward( #[rust_sitter::leaf(text = "Vent.Outward", transform = |s| s.to_string() )] String ),
     LogicTypeThrottle( #[rust_sitter::leaf(text = "LogicType.Throttle", transform = |s| s.to_string() )] String ),
     Less( #[rust_sitter::leaf(text = "Less", transform = |s| s.to_string() )] String ),
     LogicTypeQuantity( #[rust_sitter::leaf(text = "LogicType.Quantity", transform = |s| s.to_string() )] String ),
     LogicTypeProgress( #[rust_sitter::leaf(text = "LogicType.Progress", transform = |s| s.to_string() )] String ),
     LogicTypeError( #[rust_sitter::leaf(text = "LogicType.Error", transform = |s| s.to_string() )] String ),
     SortingClassKits( #[rust_sitter::leaf(text = "SortingClass.Kits", transform = |s| s.to_string() )] String ),
     SlotClassUniform( #[rust_sitter::leaf(text = "SlotClass.Uniform", transform = |s| s.to_string() )] String ),
     LogicTypeChannel6( #[rust_sitter::leaf(text = "LogicType.Channel6", transform = |s| s.to_string() )] String ),
     LogicSlotTypeLock( #[rust_sitter::leaf(text = "LogicSlotType.Lock", transform = |s| s.to_string() )] String ),
     SlotClassBack( #[rust_sitter::leaf(text = "SlotClass.Back", transform = |s| s.to_string() )] String ),
     LogicTypeVertical( #[rust_sitter::leaf(text = "LogicType.Vertical", transform = |s| s.to_string() )] String ),
     GasTypeLiquidCarbonDioxide( #[rust_sitter::leaf(text = "GasType.LiquidCarbonDioxide", transform = |s| s.to_string() )] String ),
     LogicTypeSolarIrradiance( #[rust_sitter::leaf(text = "LogicType.SolarIrradiance", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrogenInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrogenInput", transform = |s| s.to_string() )] String ),
     LogicTypeRpm( #[rust_sitter::leaf(text = "LogicType.Rpm", transform = |s| s.to_string() )] String ),
     LogicTypeFiltration( #[rust_sitter::leaf(text = "LogicType.Filtration", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrousOxide( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrousOxide", transform = |s| s.to_string() )] String ),
     LogicTypeOrbitPeriod( #[rust_sitter::leaf(text = "LogicType.OrbitPeriod", transform = |s| s.to_string() )] String ),
     LogicTypePowerRequired( #[rust_sitter::leaf(text = "LogicType.PowerRequired", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrogen( #[rust_sitter::leaf(text = "LogicType.RatioNitrogen", transform = |s| s.to_string() )] String ),
     LogicSlotTypeOpen( #[rust_sitter::leaf(text = "LogicSlotType.Open", transform = |s| s.to_string() )] String ),
     LogicTypeCurrentResearchPodType( #[rust_sitter::leaf(text = "LogicType.CurrentResearchPodType", transform = |s| s.to_string() )] String ),
     EntityStateUnconscious( #[rust_sitter::leaf(text = "EntityState.Unconscious", transform = |s| s.to_string() )] String ),
     LogicTypeSettingOutput( #[rust_sitter::leaf(text = "LogicType.SettingOutput", transform = |s| s.to_string() )] String ),
     LogicSlotTypeSeeding( #[rust_sitter::leaf(text = "LogicSlotType.Seeding", transform = |s| s.to_string() )] String ),
     ElevatorModeStationary( #[rust_sitter::leaf(text = "ElevatorMode.Stationary", transform = |s| s.to_string() )] String ),
     PowerModeDischarging( #[rust_sitter::leaf(text = "PowerMode.Discharging", transform = |s| s.to_string() )] String ),
     LogicTypeFuel( #[rust_sitter::leaf(text = "LogicType.Fuel", transform = |s| s.to_string() )] String ),
     LogicTypeSettingInput( #[rust_sitter::leaf(text = "LogicType.SettingInput", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityZ( #[rust_sitter::leaf(text = "LogicType.VelocityZ", transform = |s| s.to_string() )] String ),
     LogicSlotTypeHealth( #[rust_sitter::leaf(text = "LogicSlotType.Health", transform = |s| s.to_string() )] String ),
     LogicSlotTypeSortingClass( #[rust_sitter::leaf(text = "LogicSlotType.SortingClass", transform = |s| s.to_string() )] String ),
     LogicTypeTargetX( #[rust_sitter::leaf(text = "LogicType.TargetX", transform = |s| s.to_string() )] String ),
     SlotClassIngot( #[rust_sitter::leaf(text = "SlotClass.Ingot", transform = |s| s.to_string() )] String ),
     LogicSlotTypeOn( #[rust_sitter::leaf(text = "LogicSlotType.On", transform = |s| s.to_string() )] String ),
     LogicTypeTargetZ( #[rust_sitter::leaf(text = "LogicType.TargetZ", transform = |s| s.to_string() )] String ),
     ColorYellow( #[rust_sitter::leaf(text = "Color.Yellow", transform = |s| s.to_string() )] String ),
     SlotClassTool( #[rust_sitter::leaf(text = "SlotClass.Tool", transform = |s| s.to_string() )] String ),
     DaylightSensorModeDefault( #[rust_sitter::leaf(text = "DaylightSensorMode.Default", transform = |s| s.to_string() )] String ),
     LogicSlotTypePressureWaste( #[rust_sitter::leaf(text = "LogicSlotType.PressureWaste", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrousOxideOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrousOxideOutput", transform = |s| s.to_string() )] String ),
     SlotClassFlare( #[rust_sitter::leaf(text = "SlotClass.Flare", transform = |s| s.to_string() )] String ),
     LogicSlotTypeMature( #[rust_sitter::leaf(text = "LogicSlotType.Mature", transform = |s| s.to_string() )] String ),
     LogicTypeThrust( #[rust_sitter::leaf(text = "LogicType.Thrust", transform = |s| s.to_string() )] String ),
     LogicTypeRatio( #[rust_sitter::leaf(text = "LogicType.Ratio", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidNitrousOxideInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidNitrousOxideInput", transform = |s| s.to_string() )] String ),
     LogicTypeDistanceAu( #[rust_sitter::leaf(text = "LogicType.DistanceAu", transform = |s| s.to_string() )] String ),
     ElevatorModeDownward( #[rust_sitter::leaf(text = "ElevatorMode.Downward", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrogenOutput( #[rust_sitter::leaf(text = "LogicType.RatioNitrogenOutput", transform = |s| s.to_string() )] String ),
     LogicTypeSoundAlert( #[rust_sitter::leaf(text = "LogicType.SoundAlert", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidVolatilesOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidVolatilesOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidVolatilesInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidVolatilesInput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidPollutantOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidPollutantOutput2", transform = |s| s.to_string() )] String ),
     SlotClassDirtCanister( #[rust_sitter::leaf(text = "SlotClass.DirtCanister", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidVolatiles( #[rust_sitter::leaf(text = "LogicType.RatioLiquidVolatiles", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidOxygenOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidOxygenOutput2", transform = |s| s.to_string() )] String ),
     SortingClassAppliances( #[rust_sitter::leaf(text = "SortingClass.Appliances", transform = |s| s.to_string() )] String ),
     LogicTypeRatioOxygenInput2( #[rust_sitter::leaf(text = "LogicType.RatioOxygenInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidCarbonDioxideOutput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidCarbonDioxideOutput2", transform = |s| s.to_string() )] String ),
     LogicTypeApex( #[rust_sitter::leaf(text = "LogicType.Apex", transform = |s| s.to_string() )] String ),
     LogicTypePositionX( #[rust_sitter::leaf(text = "LogicType.PositionX", transform = |s| s.to_string() )] String ),
     LogicTypeBpm( #[rust_sitter::leaf(text = "LogicType.Bpm", transform = |s| s.to_string() )] String ),
     LogicTypeRequestHash( #[rust_sitter::leaf(text = "LogicType.RequestHash", transform = |s| s.to_string() )] String ),
     LogicSlotTypeOccupied( #[rust_sitter::leaf(text = "LogicSlotType.Occupied", transform = |s| s.to_string() )] String ),
     LogicSlotTypeGrowth( #[rust_sitter::leaf(text = "LogicSlotType.Growth", transform = |s| s.to_string() )] String ),
     GasTypeLiquidNitrogen( #[rust_sitter::leaf(text = "GasType.LiquidNitrogen", transform = |s| s.to_string() )] String ),
     LogicTypeLock( #[rust_sitter::leaf(text = "LogicType.Lock", transform = |s| s.to_string() )] String ),
     ColorRed( #[rust_sitter::leaf(text = "Color.Red", transform = |s| s.to_string() )] String ),
     SortingClassClothing( #[rust_sitter::leaf(text = "SortingClass.Clothing", transform = |s| s.to_string() )] String ),
     LogicTypeCombustionInput( #[rust_sitter::leaf(text = "LogicType.CombustionInput", transform = |s| s.to_string() )] String ),
     LogicTypeOutput( #[rust_sitter::leaf(text = "LogicType.Output", transform = |s| s.to_string() )] String ),
     LogicTypeInterrogationProgress( #[rust_sitter::leaf(text = "LogicType.InterrogationProgress", transform = |s| s.to_string() )] String ),
     LogicTypeCelestialHash( #[rust_sitter::leaf(text = "LogicType.CelestialHash", transform = |s| s.to_string() )] String ),
     LogicTypeAutoShutOff( #[rust_sitter::leaf(text = "LogicType.AutoShutOff", transform = |s| s.to_string() )] String ),
     LogicTypeRatioWater( #[rust_sitter::leaf(text = "LogicType.RatioWater", transform = |s| s.to_string() )] String ),
     LogicTypeTotalMolesOutput( #[rust_sitter::leaf(text = "LogicType.TotalMolesOutput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrousOxideOutput( #[rust_sitter::leaf(text = "LogicType.RatioNitrousOxideOutput", transform = |s| s.to_string() )] String ),
     LogicTypeTemperature( #[rust_sitter::leaf(text = "LogicType.Temperature", transform = |s| s.to_string() )] String ),
     LogicTypeActivate( #[rust_sitter::leaf(text = "LogicType.Activate", transform = |s| s.to_string() )] String ),
     LogicTypeRatioCarbonDioxideInput2( #[rust_sitter::leaf(text = "LogicType.RatioCarbonDioxideInput2", transform = |s| s.to_string() )] String ),
     LogicTypeSolarAngle( #[rust_sitter::leaf(text = "LogicType.SolarAngle", transform = |s| s.to_string() )] String ),
     LogicTypeChannel5( #[rust_sitter::leaf(text = "LogicType.Channel5", transform = |s| s.to_string() )] String ),
     LogicTypeDistanceKm( #[rust_sitter::leaf(text = "LogicType.DistanceKm", transform = |s| s.to_string() )] String ),
     LogicTypeSignalId( #[rust_sitter::leaf(text = "LogicType.SignalID", transform = |s| s.to_string() )] String ),
     SlotClassTorpedo( #[rust_sitter::leaf(text = "SlotClass.Torpedo", transform = |s| s.to_string() )] String ),
     AirControlOffline( #[rust_sitter::leaf(text = "AirControl.Offline", transform = |s| s.to_string() )] String ),
     LogicSlotTypeQuantity( #[rust_sitter::leaf(text = "LogicSlotType.Quantity", transform = |s| s.to_string() )] String ),
     SlotClassSoundCartridge( #[rust_sitter::leaf(text = "SlotClass.SoundCartridge", transform = |s| s.to_string() )] String ),
     GasTypeWater( #[rust_sitter::leaf(text = "GasType.Water", transform = |s| s.to_string() )] String ),
     LogicTypeDestinationCode( #[rust_sitter::leaf(text = "LogicType.DestinationCode", transform = |s| s.to_string() )] String ),
     LogicTypeRatioNitrogenInput2( #[rust_sitter::leaf(text = "LogicType.RatioNitrogenInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidCarbonDioxide( #[rust_sitter::leaf(text = "LogicType.RatioLiquidCarbonDioxide", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidCarbonDioxideInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidCarbonDioxideInput", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidPollutantInput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidPollutantInput", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityX( #[rust_sitter::leaf(text = "LogicType.VelocityX", transform = |s| s.to_string() )] String ),
     RobotModeStorageFull( #[rust_sitter::leaf(text = "RobotMode.StorageFull", transform = |s| s.to_string() )] String ),
     LogicTypeRatioPollutantInput2( #[rust_sitter::leaf(text = "LogicType.RatioPollutantInput2", transform = |s| s.to_string() )] String ),
     LogicTypeManualResearchRequiredPod( #[rust_sitter::leaf(text = "LogicType.ManualResearchRequiredPod", transform = |s| s.to_string() )] String ),
     LogicTypeTotalMolesInput2( #[rust_sitter::leaf(text = "LogicType.TotalMolesInput2", transform = |s| s.to_string() )] String ),
     LogicTypeRatioWaterInput( #[rust_sitter::leaf(text = "LogicType.RatioWaterInput", transform = |s| s.to_string() )] String ),
     LogicTypeTargetPadIndex( #[rust_sitter::leaf(text = "LogicType.TargetPadIndex", transform = |s| s.to_string() )] String ),
     LogicSlotTypeDamage( #[rust_sitter::leaf(text = "LogicSlotType.Damage", transform = |s| s.to_string() )] String ),
     SlotClassNone( #[rust_sitter::leaf(text = "SlotClass.None", transform = |s| s.to_string() )] String ),
     SlotClassAccessCard( #[rust_sitter::leaf(text = "SlotClass.AccessCard", transform = |s| s.to_string() )] String ),
     LogicTypeElevatorLevel( #[rust_sitter::leaf(text = "LogicType.ElevatorLevel", transform = |s| s.to_string() )] String ),
     SlotClassBattery( #[rust_sitter::leaf(text = "SlotClass.Battery", transform = |s| s.to_string() )] String ),
     ElevatorModeUpward( #[rust_sitter::leaf(text = "ElevatorMode.Upward", transform = |s| s.to_string() )] String ),
     ColorOrange( #[rust_sitter::leaf(text = "Color.Orange", transform = |s| s.to_string() )] String ),
     LogicTypeVelocityRelativeZ( #[rust_sitter::leaf(text = "LogicType.VelocityRelativeZ", transform = |s| s.to_string() )] String ),
     NotEquals( #[rust_sitter::leaf(text = "NotEquals", transform = |s| s.to_string() )] String ),
     SlotClassCircuit( #[rust_sitter::leaf(text = "SlotClass.Circuit", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidPollutantOutput( #[rust_sitter::leaf(text = "LogicType.RatioLiquidPollutantOutput", transform = |s| s.to_string() )] String ),
     LogicTypeWattsReachingContact( #[rust_sitter::leaf(text = "LogicType.WattsReachingContact", transform = |s| s.to_string() )] String ),
     LogicTypePositionZ( #[rust_sitter::leaf(text = "LogicType.PositionZ", transform = |s| s.to_string() )] String ),
     LogicTypeForwardY( #[rust_sitter::leaf(text = "LogicType.ForwardY", transform = |s| s.to_string() )] String ),
     GasTypeSteam( #[rust_sitter::leaf(text = "GasType.Steam", transform = |s| s.to_string() )] String ),
     SlotClassMagazine( #[rust_sitter::leaf(text = "SlotClass.Magazine", transform = |s| s.to_string() )] String ),
     LogicTypeTemperatureDifferentialEfficiency( #[rust_sitter::leaf(text = "LogicType.TemperatureDifferentialEfficiency", transform = |s| s.to_string() )] String ),
     LogicSlotTypePressureAir( #[rust_sitter::leaf(text = "LogicSlotType.PressureAir", transform = |s| s.to_string() )] String ),
     DaylightSensorModeHorizontal( #[rust_sitter::leaf(text = "DaylightSensorMode.Horizontal", transform = |s| s.to_string() )] String ),
     RobotModeUnload( #[rust_sitter::leaf(text = "RobotMode.Unload", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidPollutantInput2( #[rust_sitter::leaf(text = "LogicType.RatioLiquidPollutantInput2", transform = |s| s.to_string() )] String ),
     LogicTypeAirRelease( #[rust_sitter::leaf(text = "LogicType.AirRelease", transform = |s| s.to_string() )] String ),
     LogicTypeChannel7( #[rust_sitter::leaf(text = "LogicType.Channel7", transform = |s| s.to_string() )] String ),
     ColorBlue( #[rust_sitter::leaf(text = "Color.Blue", transform = |s| s.to_string() )] String ),
     EntityStateDecay( #[rust_sitter::leaf(text = "EntityState.Decay", transform = |s| s.to_string() )] String ),
     RobotModePathToTarget( #[rust_sitter::leaf(text = "RobotMode.PathToTarget", transform = |s| s.to_string() )] String ),
     LogicTypeRequiredPower( #[rust_sitter::leaf(text = "LogicType.RequiredPower", transform = |s| s.to_string() )] String ),
     LogicTypeReturnFuelCost( #[rust_sitter::leaf(text = "LogicType.ReturnFuelCost", transform = |s| s.to_string() )] String ),
     TransmitterModePassive( #[rust_sitter::leaf(text = "TransmitterMode.Passive", transform = |s| s.to_string() )] String ),
     LogicTypeRatioLiquidPollutant( #[rust_sitter::leaf(text = "LogicType.RatioLiquidPollutant", transform = |s| s.to_string() )] String ),
     LogicTypeRecipeHash( #[rust_sitter::leaf(text = "LogicType.RecipeHash", transform = |s| s.to_string() )] String ),
     SlotClassCartridge( #[rust_sitter::leaf(text = "SlotClass.Cartridge", transform = |s| s.to_string() )] String ),
     SlotClassWreckage( #[rust_sitter::leaf(text = "SlotClass.Wreckage", transform = |s| s.to_string() )] String ),
     LogicTypePowerGeneration( #[rust_sitter::leaf(text = "LogicType.PowerGeneration", transform = |s| s.to_string() )] String ),
     LogicTypeClearMemory( #[rust_sitter::leaf(text = "LogicType.ClearMemory", transform = |s| s.to_string() )] String ),
     LogicTypeRatioSteamInput2( #[rust_sitter::leaf(text = "LogicType.RatioSteamInput2", transform = |s| s.to_string() )] String ),
}
